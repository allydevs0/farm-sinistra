local UIS = game:GetService("UserInputService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera
local GrabStuff = workspace.GrabStuff
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local garage_8 = workspace.GarageFunctionals.Garage8
-- Variáveis globais
local GrabObjects = {}
local AutoFarmEnabled = true
local MaxDistance = 3
local MaxJobTime = 60
local RestTime = 40

character.Humanoid.WalkSpeed = 25

-- Função para verificar se o trabalho foi concluído
local function isJobFinished()
    local gui = player.PlayerGui:FindFirstChild("TransportJobGui")
    return gui and gui:FindFirstChild("FinishText") and gui.FinishText.Visible and gui.FinishText.Text == "true"
end

-- Função para iniciar o trabalho
local function Job()
    local jobPart = workspace.TransportJobWorkings.JobPromptPart
    character:MoveTo(jobPart.Position)
    print("Trabalho iniciado.")
end

-- Pega todas as caixas do jogador
local function GrabAllBoxes()
    GrabObjects = {}
    for _, box in ipairs(GrabStuff:GetChildren()) do
        if box:FindFirstChild("Owner") and box.Owner.Value == player then
            box.CanCollide = false
            table.insert(GrabObjects, box)
            ReplicatedStorage.Events.RequestPartGrabbing:FireServer(box)
            print("Caixa pega: " .. box.Name)
        end
    end
end

-- Mantém todas as caixas próximas ao jogador
local function KeepBoxesClose()
    for _, box in ipairs(GrabObjects) do
        if box and box:IsDescendantOf(workspace) then
            local playerPos = character.PrimaryPart.Position
            local distance = (box.Position - playerPos).Magnitude
            if distance > MaxDistance then
                local direction = (playerPos - box.Position).Unit
                box.Position = playerPos + direction * MaxDistance
            end
        end
    end
end

-- Entrega todas as caixas uma por uma
local function DeliverAllBoxes()
    for _, box in ipairs(GrabObjects) do
        if box:FindFirstChild("Destination") and box.Destination.Value then
            local destination = box.Destination.Value
            local dropArea = destination:FindFirstChild("DropArea")
            if dropArea then
                character:MoveTo(dropArea.Position + Vector3.new(0, 5, 0))
                task.wait(0.1)
                box.CanCollide = true
                box.Position = dropArea.Position + Vector3.new(0, 0.5, 0)
                task.wait(0.1)
                print("Caixa entregue: " .. box.Name)
            else
                print("DropArea não encontrado: " .. destination.Name)
            end
        end
    end
    GrabObjects = {}
end

-- Função principal de AutoFarm com múltiplas caixas
function AutoFarm()
    if not AutoFarmEnabled then return end
    print("Iniciando AutoFarm...")

    Job()
    local startTime = tick()

    GrabAllBoxes()
    task.wait(0.5)
    DeliverAllBoxes()

    if isJobFinished() then
        print("Trabalho concluído com sucesso.")
        local gui = player.PlayerGui:FindFirstChild("TransportJobGui")
        if gui then gui.Working = false end
    elseif tick() - startTime > MaxJobTime then
        print("Tempo excedido. Descansando...")
        wait(RestTime)
    end
end

-- Mantém as caixas próximas no Heartbeat
RunService.Heartbeat:Connect(function()
    KeepBoxesClose()
end)

-- UI Library
local Fun = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/nightmares.fun-UI-Library/main/source.lua"))()
local window = Fun.Create("UI Library")
local tab = window:Tab("Leak")
local section = tab:Section("Showcase")

section:Toggle("Toggle", function(s)
    print(s)
end)
section:Button("Pegar caminhão ", function()
   character:MoveTo(garage_8.Position + Vector3.new(0, 5, 0))
   workspace.GarageFunctionals.Garage8.ProximityPrompt.fireproximityprompt(path, distance)
end)

section:Button("AutoFarm", function()
    AutoFarm()
end)
section:Button("Fix", function()
    game:GetService("Players").LocalPlayer.PlayerGui.TransportJobGui.Working.Value = false
end)

section:Button("Puxar Todas as Caixas", function()
    GrabAllBoxes()
    task.wait(1)
    DeliverAllBoxes()
end)

section:Label("Label")

section:KeyBind("KeyBind", Enum.KeyCode.E, function()
end)

section:Slider("Slider", 16, 200, function()
end)

section:Dropdown("Dropdown", {"1", "2", "3"}, function()
end)

section:TextBox("Textbox", function()
end)
